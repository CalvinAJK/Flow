@using Flow.Data
@using System.Security.Claims
@model List<Microsoft.AspNetCore.Identity.IdentityUser>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    
    @if (Model != null && Model.Any())

{
        <h1 class="display-4">@ViewBag.OrganizationName</h1>
        <!-- Display user's organization and role -->
        <p>
            @* You are currently in organization:  @ViewBag.OrganizationName <br /> *@
            Your role in this organization: @ViewBag.UserRole
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <!-- Add more columns as needed -->
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.UserName</td>
                        <td>@user.Email</td>
                        <td>
                            @{
                                // Retrieve the user's role based on the organization
                                var organizationRoles = ViewBag.OrganizationRoles as List<OrganizationRole>;
                                var userRole = organizationRoles.FirstOrDefault(or => or.UserId == user.Id)?.Role;
                            }
                            @if (ViewBag.UserRole == "Admin" && user.Id != User.FindFirstValue(ClaimTypes.NameIdentifier) && userRole != "Admin")
            {
                <select class="form-control" onchange="changeUserRole('@user.Id', this.value)">
                    <!option value="Member" @(userRole == "Member" ? "selected" : "")>Member</!option>
                    <!option value="Moderator" @(userRole == "Moderator" ? "selected" : "")>Moderator</!option>
                    <!option value="Admin" @(userRole == "Admin" ? "selected" : "")>Admin</!option>
                </select>
            }
            else
            {
                @userRole
            }
                            @* @{
                                // Retrieve the user's role based on the organization
                                var organizationRoles = ViewBag.OrganizationRoles as List<OrganizationRole>;
                                var userRole = organizationRoles.FirstOrDefault(or => or.UserId == user.Id)?.Role;
                                // Display the user's role if found
                                if (!string.IsNullOrEmpty(userRole))
                                {
                                    <text>@userRole</text>
                                }
                                else
                                {
                                    <text>No role assigned</text>
                                }
                            } *@
                        </td>
                        <!-- Add more cells for additional user properties -->
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    
    {
        <h1 class="display-4">Welcome</h1>
        <p>Create or join an organization!</p>
    }

</div>
