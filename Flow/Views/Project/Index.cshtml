@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model IEnumerable<Flow.Data.Project>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<h1>Index</h1>
<ul role="list" class="-mx-2 space-y-1">
@await Component.InvokeAsync("UserHasExistingTeam", new { userId = userId })
</ul>
<p>
    <a asp-action="Create">Create New</a>
</p>
    @if (Model != null && Model.Any())
{
<p>
    You are currently in team:  @ViewBag.TeamName <br />
    Your role in this team: @ViewBag.UserTeamRole
</p>
    <table class="table">
        <thead>
            <tr>
                <th>Project Name</th>
                <th>Project Description</th>
                <th>Role</th>
                <!-- Add more columns as needed -->
            </tr>
        </thead>
        <tbody>
            @foreach (var project in Model)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    @* <td>
                        @{
                            // Retrieve the user's role based on the organization
                            var organizationRoles = ViewBag.OrganizationRoles as List<OrganizationRole>;
                            var userRole = organizationRoles.FirstOrDefault(or => or.UserId == user.Id)?.Role;
                            // Display the user's role if found
                            if (!string.IsNullOrEmpty(userRole))
                            {
                                <text>@userRole</text>
                            }
                            else
                            {
                                <text>No role assigned</text>
                            }
                        }
                    </td> *@
                    <!-- Add more cells for additional user properties -->
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Create or join a project!</p>
}